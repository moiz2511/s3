"use strict";var util=require("util"),fs=require("fs"),events=require("events"),mkdirp=require("mkdirp"),async=require("async"),fileUtility=require("FileUtility"),environment=require("Environment"),configFileRecordParam="configFile",ConfigFile=function(e,i){var n,t=!1,r=new events.EventEmitter,o=function(e,i){return{timestamp:(new Date).toISOString(),filePath:e,name:i}},a=function(e){n=e,t||(t=!0,r.emit("initialized",n)),r.emit("change",n)},c=function(e){i.getParameter(configFileRecordParam,e)},l=function(e,n){i.setParameter(configFileRecordParam,e,n)},u=function(e){return/\.ini$/.test(e)},f=function(e,i){u(e)?i(null,e):i(new ConfigFile.InvalidFileTypeError)},s=function(e,i,n){var t=o(e,i);l(t,function(e){e?n(e):(a(t),n(null,t))})};this.saveFile=function(i,n,t){var r=environment.userCanTraceConfig;async.waterfall([function(e){mkdirp.sync(environment.canTraceDataPath),e()},function(e){f(i,e)},function(e,i){fileUtility.copySingleFile(e,r,{},i)},function(e,i){s(r,n,i)}],function(i,n){i&&e.error("Failed to save Can Trace INI file: "+i),t(i,n)})},this.onFileRecordChange=function(e){r.on("change",e),t&&e(n)},this.getFileRecord=function(e){t?e(n):r.once("initialized",e)},e.once("start",function(){c(a)})};ConfigFile.InvalidFileTypeError=function(){this.name=this.constructor.name,this.message="Expected an INI file",Error.captureStackTrace(this,this.constructor)},util.inherits(ConfigFile.InvalidFileTypeError,Error),module.exports=ConfigFile;