"use strict";var async=require("async"),_=require("underscore"),PinSearchDataProvider=function(i,e){this._app=i,this._db=e};PinSearchDataProvider.prototype.getModelGUIDsByPins=function(i,e){var n=this._app,r=this._db,o=[];async.each(i,function(i,e){r.collection("PinModelMap").find({pin:i}).toArray(function(r,t){if(r){var a="Database error attempting to query PIN collection. "+r;return n.error(a),void e(new Error(a))}if(t){var d={modelGUIDs:[],pin:i};_.each(t,function(i){d.modelGUIDs.push(i.modelGuid)}),o.push(d)}e()})},function(i){e(i,o)})},PinSearchDataProvider.prototype.getModelGUIDsByPin=function(i,e){this.getModelGUIDsByPins([i],function(i,n){var r=_.first(n);e(i,r?r.modelGUIDs:void 0)})},PinSearchDataProvider.prototype.insertPinModelMapping=function(i,e){if(!_.isArray(i)||0===i.length)return void e();var n=this._db,r=n.collection("PinModelMapping").initializeUnorderedBulkOp();_.each(i,function(i){r.find({modelGuid:i.modelGuid}).upsert().update({$addToSet:{pins:{$each:i.pins}}})}),r.execute(function(i){e(i)})},module.exports=PinSearchDataProvider;