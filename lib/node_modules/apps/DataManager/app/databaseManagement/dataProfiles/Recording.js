"use strict";var uuid=require("uuid-v4"),_=require("underscore"),async=require("async"),fs=require("fs"),environment=require("Environment"),url=require("url"),path=require("path"),utilities=require("./utilities.js"),fileUtility=require("FileUtility"),Recording=function(e,t,o,i,r,n){this._app=e,this._db=t,this._networkContext=i,this._registrationClient=r,this._usersDataProvider=n};Recording.prototype.getCollection=function(){return"Recordings"},Recording.prototype.getType=function(){return"Recording"},Recording.prototype.validateNewData=function(e,t){if(!e.path)return void t(new Error("File path is missing"));if(!_.isString(e.path))return void t(new Error("File path is not a string"));var o={localId:e.localId,title:e.title,description:e.description||"",completedTime:e.completedTime,filesizeInKB:e.filesizeInKB,createdBy:e.createdBy,path:e.path,models:e.models,boxActivityId:e.activityId};e.boxRecordingDetailsId&&(o.boxRecordingDetailsId=e.boxRecordingDetailsId),e.hash&&(o.hash=e.hash),e.durationInSecs&&(o.durationInSecs=e.durationInSecs);var i=!_.contains(o,void 0);i?t(void 0,o):t(new Error("Missing fields in recording data"))},Recording.prototype.validateUpdate=function(e,t,o){o(new Error("Recording objects cannot be updated."))},Recording.prototype.compactData=function(e,t,o){var i=this;return e||_.isArray(t)&&0!==t.length?(t=_.sortBy(t,"index"),e=_.clone(e)||{},_.each(t,function(t){"add"===t.action?e=t.dataObject:"delete"===t.action&&(e={})}),void(_.isString(e.createdBy)?i._usersDataProvider.getUserObject(e.createdBy,function(t,i){t||!i?e.createdBy={userId:e.createdBy,userName:""}:e.createdBy=i,o(void 0,e)}):o(void 0,e))):void o(new Error("No data to compact."))},Recording.prototype.applyQuery=function(e,t,o){o(void 0,_.where(e,t))},Recording.prototype.formatUploadBoxStateMessage=function(e,t){var o=_.chain(e).where({type:"Recording"}).map(function(e){return"add"===e.action?{action:e.action,boxActionId:e._id.toString(),boxRecordingId:e.dataObject.localId,createdBy:e.dataObject.createdBy,completedTime:e.dataObject.completedTime,description:e.dataObject.description,durationInSecs:e.dataObject.durationInSecs,filesizeInKB:e.dataObject.filesizeInKB,title:e.dataObject.title,models:e.dataObject.models,boxActivityId:e.dataObject.boxActivityId,boxRecordingDetailsId:e.dataObject.boxRecordingDetailsId}:void 0}).compact().value();t(null,o.length>0?{recordings:o}:void 0)},Recording.prototype.createUpdates=function(e,t,o,i){var r=this,n=r._db,a=r._app;_.isArray(e)&&e.length>0&&o(_.pluck(e,"index"),{type:"stateChanges"});var d=_.groupBy(e,function(e){return e.action}),c=d.add||[],s=_.map(t.recordings,function(e){return e.boxActivityId=e.boxActivityId||e.activityId,e.boxRecordingDetailsId=e.boxRecordingDetailsId||e.recordingDetailsId,_.omit(e,"action")}),u={};async.each(c,function(e,t){var o=e.dataObject.localId,i=e.dataObject.path,n=e.dataObject.hash,a=_.findWhere(s,{boxRecordingId:o});a?(u[a.serverRecordingId]={localId:o,path:i,action:"upload",hash:n},t()):(r._app.error("Couldn't find recording update for new recording."),deleteRecordingData(i,function(e){t(e)}))},function(e){return e?void i(e):void utilities.getExistingRecordingsAssociatedWithUpdatedJobs(a,n,t,function(e,n){if(e)return void i(e);var a=_.pluck(n,"id"),d=_.pluck(s,"serverRecordingId"),c=_.chain(s).filter(function(e){return e.boxActivityId}).groupBy("boxActivityId").value(),l=_.chain(t.activities).filter(function(e){return"liveRecording"===e.type&&!e.jobId}).map(function(e){if(c[e.localId])return _.pluck(c[e.localId],"serverRecordingId")}).compact().flatten(!0).value();a=_.difference(a,l);var p=_.difference(a,d),f=_.chain(n).filter(function(e){return _.contains(p,e.id)}).map(function(e){return e.path}).value();p.length>0&&o(void 0,{type:"recordingDeletes",data:{recordingIds:p,recordingPaths:f}}),_.each(n,function(e){u[e.id]={localId:e.localId,path:e.path,action:"none",hash:e.hash}}),r._determineRecordingsToDownload(_.pluck(s,"serverRecordingId"),function(e,t,r){return e?void i(e):(_.each(t,function(e){_.isUndefined(u[e])&&(u[e]={localId:uuid(),path:path.join(environment.recordingsPath,uuid()),action:"download"})}),_.each(r,function(e){u[e.id]={localId:e.localId,path:e.path,action:"none",hash:e.hash}}),_.each(s,function(e){e.hash=u[e.serverRecordingId].hash,o(void 0,{type:"newRecording",data:{mapEntry:u[e.serverRecordingId],recording:e}})}),void i())})})})},Recording.prototype._determineRecordingsToDownload=function(e,t){var o=this,i=o._db;i.collection(o.getCollection()).find({id:{$in:e}}).toArray(function(o,i){if(o)return void t(o);var r=_.map(i,function(e){return e.id});t(void 0,_.difference(e,r),i)})},Recording.prototype.processUpdatesDuringSync=function(e,t,o,i,r){var n=this,a=n._db;if(_.isEmpty(e))return void r();var d=_.groupBy(e,function(e){return e.updateData&&e.updateData.type});_.isEmpty(_.difference(_.keys(d),["stateChanges","recordingDeletes","newRecording"]))||n._app.warn("An unknown update type was found in the updates! ",_.keys(d));var c=function(e){return _.isArray(d.stateChanges)?void async.each(d.stateChanges,function(e,t){i(e._id,void 0,t)},function(t){e(t)}):void e()},s=function(e){return _.isArray(d.newRecording)?void async.eachSeries(d.newRecording,function(e,o){if(e.completed)return void o();var r=e.updateData.data.recording,a=e.updateData.data.mapEntry;if(_.isUndefined(a))return n._app.error("Recording information is missing from localInfo map. ",r),void o();switch(r.path=a.path,r.localId=a.localId,a.action){case"none":t(transformIds(r),function(t){i(e._id,t,o)});break;case"upload":n._registrationClient.getBoxId(function(a){uploadRecording(n._app,r,n._networkContext,a,e.index,function(a){return a?(n._app.error("Error uploading recording. ",a),void i(e._id,a,o)):(n._app.info("Recording uploaded successfully."),void t(transformIds(r),function(t){i(e._id,t,o)}))})});break;case"download":t(transformIds(r),function(t){return t?void i(e._id,t,o):void downloadRecording(n._app,r,n._networkContext,function(t){t?n._app.error("Error downloading recording with server id: "+r.id,t):n._app.info("Recording with server id: "+r.id+" downloaded successfully."),i(e._id,t,o)})});break;default:n._app.warn("Invalid new recording action: "+a.action),i(e._id,void 0,o)}},function(t){e(t)}):void e()},u=function(e){return _.isArray(d.recordingDeletes)?void async.eachSeries(d.recordingDeletes,function(e,t){if(e.completed)return void t();var o=e.updateData.data.recordingIds,r=e.updateData.data.recordingPaths;_.isArray(r)||(r=[]),async.eachSeries(r,deleteRecordingData,function(r){return r?void t(r):void a.collection(n.getCollection()).remove({id:{$in:o}},function(o){i(e._id,o,t)})})},function(t){e(t)}):void e()};async.series([c,u,s],function(e){r(e)})};var transformIds=function(e){if(e)return e.localId=e.boxRecordingId,e.id=e.serverRecordingId,_.omit(e,["boxRecordingId","serverRecordingId"])},uploadRecording=function(e,t,o,i,r,n){var a=url.parse(environment.serverLocation);fs.readFile(t.path,function(d,c){if(d&&"ENOENT"===d.code)return e.error("Failed to find the recording file"),void n();if(d)return void n(d);var s=_.map(t.models,function(e){return{model:e.modelGUID,pin:e.modelPIN}}),u={url:{protocol:a.protocol,hostname:a.hostname,port:a.port,path:"/bms/oauth/boxes/"+i+"/recordings"},formData:{metadata:{value:function(){return JSON.stringify({boxActionId:r,userId:t.createdBy&&t.createdBy.userId,equipment:s,boxActivityId:t.boxActivityId,boxRecordingId:t.localId})},options:{contentType:"application/vnd.johndeere.sa.boxNetwork.uploadRecordings.v1+json"}},file:{value:fileUtility.getFileReadStreamGenerator(t.path),options:{filename:uuid(),contentType:"application/octet-stream"}}}};e.info("Uploading recording files"),o.uploadMultipartFormData(o.getNetworkOptions(u),function(t,o){!t&&o.statusCode>=200&&o.statusCode<300?(e.info("A recording has been uploaded"),n(t)):t?n(t):(e.error("Bad Server Response Uploading recording Data: ",u),e.error("Server Response For recording Data: ",o.statusCode),t=new Error("Invalid statusCode received while uploading a recording."),t.statusCode=o.statusCode,n(t))})})},downloadRecording=function(e,t,o,i){i=_.once(i);try{var r=url.parse(t.downloadURL)}catch(t){return e.error("Error parsing recordingURL: ",t),void i(t)}var n={protocol:r.protocol,hostname:r.hostname,port:r.port,path:r.path,method:"GET",headers:{accepts:"application/zip"}};o.requestForProtocol(o.getNetworkOptions(n),function(e,o){if(e)return void i(e);if(200!==o.statusCode){var e=new Error("Invalid statusCode while downloading recording file.");return e.statusCode=o.statusCode,void i(e)}var r=fs.createWriteStream(t.path);r.on("error",function(e){i(e)}).on("finish",function(){r.close(function(e){i(e)})}),o.pipe(r)})},deleteRecordingData=function(e,t){fs.unlink(e,function(e){e&&"ENOENT"===e.code?t():t(e)})};module.exports=Recording;