"use strict";var _=require("underscore"),async=require("async"),uuid=require("uuid"),dbHelperApp=require("../dbHelper.js"),DiagnosticProcedureDetail=function(e,t){this._app=e,this._db=t,this._dbHelper=new dbHelperApp(e,t)};DiagnosticProcedureDetail.prototype.getCollection=function(){return"DiagnosticProcedureDetails"},DiagnosticProcedureDetail.prototype.getType=function(){return"DiagnosticProcedureDetail"},DiagnosticProcedureDetail.prototype.validateNewData=function(e,t){t(void 0,e)},DiagnosticProcedureDetail.prototype.validateUpdate=function(e,t,a){a(void 0,e)},DiagnosticProcedureDetail.prototype.compactData=function(e,t,a){return e||_.isArray(t)&&0!==t.length?(t=_sortStateChanges(t),e||(e=_.first(t).dataObject,t=_.rest(t)),_.each(t,function(t){null===t.dataObject.jobId?(e.jobId=null,e.boxJobId=null):(_.each(t.dataObject.userData&&t.dataObject.userData.steps,function(t){var a=_.findWhere(e.userData.steps,{stepId:t.stepId});a&&(e.userData.steps=_.without(e.userData.steps,a))}),e.userData.steps=_.union(e.userData.steps,t.dataObject.userData.steps))}),void a(void 0,e)):void a(new Error("No data to compact."))},DiagnosticProcedureDetail.prototype.applyQuery=function(e,t,a){if(e=_.reject(e,function(e){return null===e.jobId}),t.jobIds&&(e=_.filter(e,function(e){return _.contains(t.jobIds,e.jobId)})),t.newest){var o=[],i=_.sortBy(e,function(e){var t=new Date(e.createdTime);return-1*t.getTime()});_.each(i,function(e){var t=_.findWhere(o,{manualId:e.manualId,topicId:e.topicId,procedureId:e.procedureId});t||o.push(e)}),e=o}t.idsOnly&&(e=_.map(e,function(e){return{manualId:e.manualId,topicId:e.topicId,procedureId:e.procedureId,diagProcDetailId:e.localId||e.id}})),a(void 0,e)};var _applySpecificIds=function(e){if(e)return e.boxDiagProcDetailId=e.localId,e.diagProcDetailId=e.id,_.omit(e,"localId","id")},_applyGeneralizedIds=function(e){if(e)return e.localId=e.boxDiagProcDetailId,e.id=e.diagProcDetailId,_.omit(e,"diagProcDetailsId")},_getGroupedStateChanges=function(e){return _.values(_.groupBy(e,function(e){return e.localId}))},_sortStateChanges=function(e){return _.sortBy(e,"index")};DiagnosticProcedureDetail.prototype.formatUploadBoxStateMessage=function(e,t){var a=this,o=this._db,i=_getGroupedStateChanges(e);async.map(i,function(e,t){o.collection(a.getCollection()).findOne({localId:_.first(e).localId},{_id:!1},function(o,i){return o?void t(o):void a.compactData(i,e,function(e,o){return e?void t(e):o&&(i||null!==o.jobId)?(o.createdBy&&(o.createdBy=o.createdBy.userId),o.lastModifiedBy&&(o.lastModifiedBy=o.lastModifiedBy.userId),void a._dbHelper.getAvailableIds("Jobs",o.jobId,function(e,a){return e?void t(e):(a&&(a.id?o.jobId=a.id:(delete o.jobId,o.boxJobId=a.localId)),o.id&&delete o.localId,void t(void 0,_applySpecificIds(o)))})):void t()})})},function(e,a){a=_.compact(a),t(e,a.length>0?{diagProcDetails:a}:void 0)})},DiagnosticProcedureDetail.prototype.createUpdates=function(e,t,a,o){var i=this._db,d=this;_.isArray(e)&&e.length>0&&a(_.pluck(e,"index"));var r=_.pluck(t.jobs,"jobId");r=_.union(r,_.compact(_.pluck(t.jobs,"boxJobId"))),r.length>0&&a(void 0,{type:"deletes",data:r}),i.collection(d.getCollection()).find({jobId:{$in:r}},{id:!0,localId:!0}).toArray(function(e,i){if(e)return void o(e);var d={};_.each(i,function(e){d[e.id]=e.localId}),a(void 0,{type:"newDiagProcDetails",data:{diagProcDetails:t.diagProcDetails,idToLocalIdMap:d}}),o()})},DiagnosticProcedureDetail.prototype.processUpdatesDuringSync=function(e,t,a,o,i){var d=this,r=d._db,n=_.filter(e,function(e){return e.updateData&&"deletes"===e.updateData.type});e=_.difference(e,n);var c=function(e){async.each(n,function(e,t){r.collection(d.getCollection()).remove({jobId:{$in:e.updateData.data}},function(a){o(e._id,a,t)})},function(t){e(t)})},u=function(a){async.each(e,function(e,a){if(e.updateData)switch(e.updateData.type){case"newDiagProcDetails":var i=e.updateData.data.idToLocalIdMap,d=_.map(e.updateData.data.diagProcDetails,function(e){return e=_applyGeneralizedIds(e),e.localId=i[e.id]||e.localId||uuid(),e});t(d,function(t){o(e._id,t,a)});break;default:a(new Error("Invalid Type: "+e.updateData.type))}else o(e._id,void 0,a)},function(e){a(e)})};async.series([c,u],function(e){i(e)})},DiagnosticProcedureDetail.prototype.processUpdatesAfterSync=function(e,t){},module.exports=DiagnosticProcedureDetail;