"use strict";var async=require("async"),fs=require("fs"),path=require("path"),environment=require("Environment"),SystemUpdateProvider=require("../dataProviders/SystemUpdateProvider.js"),xml2js=require("xml2js"),parser=new xml2js.Parser,_=require("underscore"),utility=require("FileUtility"),SoftwareVersionInfo=function(e,t,n,i){this.previousVersion=e,this.newVersion=t,this.installationCompleted=!_.isEqual(e,t),this.reInstallationCompleted=n,this.calInstallationCompleted=i},setup=function(e,t,n,i,a){var o=new SystemUpdateProvider(e,t,n);checkSystemUpdateState(e,o,n,function(t,o){t&&e.warn("An error occurred while reading application version information: ",t),e.info("Software version info",o),i.once("start",function(){o&&o.installationCompleted?n.installationComplete(o.newVersion,o.previousVersion):o&&(o.reInstallationCompleted||o.calInstallationCompleted)&&n.reInstallationComplete()}),a(t)})},checkSystemUpdateState=function(e,t,n,i){var a=function(e){return{UpdateDetails:{version:[e],checkedForUpdates:[!0]}}},o=function(e,t){var n=new xml2js.Builder,i=n.buildObject(e);fs.writeFile(path.join(environment.dataRoot,"UpdateDetails.xml"),i,function(e){t(e)})},r=function(t){var n=path.join(environment.dataRoot,"UpdateDetails.xml");fs.readFile(n,"utf8",function(n,i){n&&"ENOENT"===n.code?(e.warn("UpdateDetails.xml is missing: ",n),t(null,void 0)):n?t(n):parser.parseString(i,function(n,i){if(n)return e.error("Error in parsing UpdateDetails.xml",n),void t(n);if(i&&i.UpdateDetails){var a={version:i.UpdateDetails.version&&i.UpdateDetails.version[0]||void 0,checkedForUpdates:!!i.UpdateDetails.checkedForUpdates};a.version&&!a.checkedForUpdates?(i.UpdateDetails.checkedForUpdates=[!0],o(i,function(n){n&&e.warn("Failed to write UpdateDetails.xml",n),t(null,a)})):t(null,a)}else t(null,{})})})};async.parallel({pendingVersion:function(e){t.getPendingSystemUpdate(function(t,n){e(t,n||{})})},installedSoftwareDetails:function(t){r(function(n,i){n&&e.error("An error occurred while reading the UpdateDetails.xml file: ",n),t(void 0,i||{})})},installedVersion:function(e){t.readInstalledSoftwareVersion(function(t,n){t?e(t):e(t,n)})},calInstallationCompleted:function(t){var n=path.join(environment.SACalDirectory,"calInstalled.txt");fs.exists(n,function(i){i?t(void 0,!1):fs.writeFile(n,"",function(n){n&&e.warn("Failed to create calInstalled.txt",n),t(void 0,!0)})})}},function(n,r){if(n)i(n);else{var l=r.installedSoftwareDetails.version,s=r.installedSoftwareDetails.checkedForUpdates;if(l)if(r.installedVersion){var d=new SoftwareVersionInfo(l,r.installedVersion,!s,r.calInstallationCompleted);if(d.installationCompleted){var c={installedVersion:r.pendingVersion.newVersion,installationDisposition:"successful",installationStartTime:r.pendingVersion.installationStartTime,installationCompletionTime:new Date,installationInitiatedBy:r.pendingVersion.installationInitiatedBy};async.series([function(e){t.addInstallationSummary(c,function(t){e(t)})},function(e){t.clearPendingSystemUpdate(l,function(t){e(t)})},function(e){utility.clearDirectory(environment.updateStagingPath,function(t){e(t)})}],function(t){t&&e.error("An error occurred while processing a completed software update, ",t),i(void 0,d)})}else i(void 0,d)}else t.setSoftwareInstalledObject(l,function(t){var n=new SoftwareVersionInfo(l,l,!1,!1);t&&e.error("An error occurred while setting installed version information in the database, ",t),i(t,n)});else if(r.installedVersion)o(a(r.installedVersion),function(t){var n=new SoftwareVersionInfo(r.installedVersion,r.installedVersion,!1,r.calInstallationCompleted);t&&e.warn("Unable to write installed software version from the database to the UpdateDetails.xml file: ",t),i(void 0,n)});else{var f="0.00.0",u=new SoftwareVersionInfo(f,f,!1,r.calInstallationCompleted);async.parallel([function(e){o(a(f),e)},function(e){t.setSoftwareInstalledObject(f,e)}],function(t){e.warn("An error occurred while setting application version to default version information: ",t),i(void 0,u)})}}})};module.exports=setup;