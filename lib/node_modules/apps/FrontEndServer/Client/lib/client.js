"use strict";var url=require("url"),_=require("underscore"),protocol=require("Protocol"),events=require("events"),util=require("util"),config=require("../../app/config.js"),FrontEndServerClient=function(t){var e=this;events.EventEmitter.call(e),t.on(protocol.sessionStart,function(){e.emit("sessionStart")}),t.on(protocol.sessionEnd,function(){e.emit("sessionEnd")}),this.addNamespace=function(e){t.broadcast(protocol.addNamespace,e)};var n=function(e){var n=this;events.EventEmitter.call(this),this.broadcast=function(n,o){t.broadcast(protocol.broadcast,{event:n,data:o,namespace:e})},this.send=function(n,o,r){t.broadcast(protocol.send,{id:n,event:o,data:r,namespace:e})},t.on(protocol.disconnected,function(t){n.emit("disconnected",t.id)})},o=function(){events.EventEmitter.call(this)},r=function(e,n,o){var r=e.emit;e.emit=function(){var i=Array.prototype.slice.call(arguments),s=i[0],a=i[1];t.broadcast(protocol.socketIoEvent,{id:n,event:s,data:a,namespace:o}),r.apply(e,arguments)}};util.inherits(o,events.EventEmitter),util.inherits(n,events.EventEmitter),this.getNamespaceWrapper=function(e){var i=new n(e);return t.on(protocol.connected,function(t){var n=t.id,s=t.namespace;if(e===s){var a=new o;r(a,n,e),i.emit("connection",a)}}),i},this.mount=function(e,n){var o=e instanceof RegExp,r="",i="";o&&(r=e.source,i=(e.global?"g":"")+(e.multiline?"m":"")+(e.ignoreCase?"i":"")),t.queue("front-end:mount",{isRegexp:o,path:o?r:e,pathOptions:o?i:void 0,options:n})}};util.inherits(FrontEndServerClient,events.EventEmitter);var mount=function(t,e,n,o){!o&&_.isFunction(n)&&(o=n,n="http");var r=new FrontEndServerClient(t),i={target:url.format({protocol:n,hostname:e.address().address,port:e.address().port})},s=function(t,e){!_.isObject(t)||t instanceof RegExp||(e=t,t=void 0);var n=_.clone(i);_.extend(n,e),r.mount(t,n)};o(s)};exports.getOfflineUrl=function(){return config.host.offlineUrl},exports.mount=mount,exports.create=function(t){return new FrontEndServerClient(t)};