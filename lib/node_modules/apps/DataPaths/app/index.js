"use strict";var box=require("BoxApplication"),environment=require("Environment"),errorUtility=require("ErrorUtility"),configStore=require("apps/ConfigStore/Client"),TarIndexManager=require("TarIndexManager"),protocol=require("Protocol"),async=require("async"),_=require("underscore"),path=require("path"),config=require("./config"),defaultDataLocationInformation={path:environment.defaultPublicDataRoot,canChange:!0},app=box(config),configStoreClient=new configStore(app,"dataPaths"),tarIndexManager,datasetLocation,tarAndIndexDirectories,clients=[];app.on(protocol.requestPublicDataRoot,function(o,t,n){clients=_.union(clients,[n.from,app.clientId]),getDataLocationInformation(function(o,n){t({error:errorUtility.encodeErrorObject(o),path:n.path})})}),app.on(protocol.requestTarAndIndexDirectoryLocations,function(o,t){getTarAndIndexDirectoryLocations(function(o,n){t({error:errorUtility.encodeErrorObject(o),directoryLocations:n})})}),app.on(protocol.getDataLocationInformation,function(o,t){getDataLocationInformation(function(o,n){t({error:errorUtility.encodeErrorObject(o),info:n})})}),app.on(protocol.setPublicDataRoot,function(o,t){setPublicDataRoot(o,function(o){t({error:errorUtility.encodeErrorObject(o)})})}),app.on(protocol.changeDatasetLocation,function(o,t){changePublicDataRootLocation(o,function(o){t({error:errorUtility.encodeErrorObject(o)})})}),app.on(protocol.checkPublicDataRoot,function(o,t){checkPublicDataRoot(function(o){t(o)})}),app.on(protocol.setTarAndIndexDirectoryLocations,function(o,t){setTarAndIndexDirectoryLocations(o,function(o){t({error:errorUtility.encodeErrorObject(o)})})}),app.on(protocol.unloadTarReaders,function(o,t){tarAndIndexDirectories=[],tarIndexManager?tarIndexManager._refreshTarReaders(tarAndIndexDirectories,datasetLocation,t):t()}),app.on(protocol.loadTarReaders,function(o,t){tarAndIndexDirectories=o,tarIndexManager=tarIndexManager||new TarIndexManager(app,tarAndIndexDirectories,datasetLocation),tarIndexManager._refreshTarReaders(tarAndIndexDirectories,datasetLocation),t()}),app.on(protocol.clearDataLocationInformation,function(o,t){clearDataLocationInformation(function(o){t({error:errorUtility.encodeErrorObject(o)})})}),app.on(protocol.clearTarAndIndexDirectoryLocations,function(o,t){clearTarAndIndexDirectoryLocations(function(o){t({error:errorUtility.encodeErrorObject(o)})})}),app.on(protocol.publicDataRootChanged,function(o,t){t()}),app.on("stop",function(){app.disconnect()});var checkPublicDataRoot=function(o){return tarIndexManager?void tarIndexManager.getNumberOfTarReaders(function(t){if(t)return void o({isValid:!0});var n=tarIndexManager._refreshTarReaders(tarAndIndexDirectories,datasetLocation);tarIndexManager.getNumberOfTarReaders(function(t){t>0&&sendRequestsToClients(protocol.refreshTarReaders,void 0,function(o){}),o({isValid:n})})}):void o(!1)},getDataLocationInformation=function(o){configStoreClient.getParameter("publicDataRootInfo",function(t){o(void 0,t||defaultDataLocationInformation)})},setPublicDataRoot=function(o,t){o=path.normalize(o),getDataLocationInformation(function(n,r){if(n)return void t(n);var e=path.normalize(r.path);r.canChange?configStoreClient.setParameter("publicDataRootInfo",{path:o,canChange:!1},function(n){return n?void t(n):(datasetLocation=o,void sendRequestsToClients(protocol.publicDataRootChanged,o,function(o){t(o)}))}):e===o?t():t(new Error("Data Location Cannot Be Changed."))})},clearDataLocationInformation=function(o){configStoreClient.setParameter("publicDataRootInfo",defaultDataLocationInformation,function(t){return t?void o(t):(datasetLocation=defaultDataLocationInformation.path,void sendRequestsToClients(protocol.publicDataRootChanged,datasetLocation,function(t){return t?void o(t):void clearTarAndIndexDirectoryLocations(o)}))})},clearTarAndIndexDirectoryLocations=function(o){configStoreClient.setParameter("tarAndIndexDirectoryLocations",[],function(t){return t?void o(t):void sendRequestsToClients(protocol.unloadTarReaders,void 0,function(t){o(t)})})},sendRequestsToClients=function(o,t,n){async.each(clients,function(n,r){app.request(o,t,n,r)},function(o){n(o)})},changePublicDataRootLocation=function(o,t){try{o=path.normalize(o)}catch(o){return void t(o)}configStoreClient.setParameter("publicDataRootInfo",{path:o,canChange:!1},function(n){return n?void t(n):void sendRequestsToClients(protocol.publicDataRootChanged,o,function(n){datasetLocation=o,t(n)})})},getTarAndIndexDirectoryLocations=function(o){configStoreClient.getParameter("tarAndIndexDirectoryLocations",function(t){o(void 0,t||[])})},setTarAndIndexDirectoryLocations=function(o,t){return _.isArray(o)?(o=_.map(o,function(o){return path.normalize(o)}),void configStoreClient.setParameter("tarAndIndexDirectoryLocations",o,function(n){return n?void t(n):void sendRequestsToClients(protocol.loadTarReaders,o,function(o){t(o)})})):void t(new Error("Must Provide an Array of Locations."))};getDataLocationInformation(function(o,t){return o?void app.ready(o):(datasetLocation=t&&t.path,void getTarAndIndexDirectoryLocations(function(o,t){return o?void app.ready(o):(tarAndIndexDirectories=t||[],datasetLocation&&tarAndIndexDirectories.length>0&&(tarIndexManager=new TarIndexManager(app,tarAndIndexDirectories,datasetLocation)),void app.ready())}))});