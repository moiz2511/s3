var _=require("underscore"),xml2js=require("xml2js"),async=require("async"),DataManagerApp=require("apps/DataManager/Client"),offlineConnectionUtils=function(n,e){var t=this,o=DataManagerApp.create(n);this.getBestConnectionLanguage=function(n){return _.chain(n).map(function(n){return e.config.calLanguageMap[n.toUpperCase()]}).compact().first().value()},this.getUserAccessLevel=function(e,t){n.debug("Getting user access level."),o.getEcuAccessLevel(e,function(n,e){!n&&e||(e=1),t(void 0,e)})},this.updateConnectionXml=function(e,o,i,a){n.debug("Updating the connection XML for an offline connection");var r=new xml2js.Builder,c=new xml2js.Parser;c.parseString(e,function(e,c){if(e)return n.error("Failed to parse connection XML",e),void a(e);var u=t.getBestConnectionLanguage(o);n.debug("Using "+u+" as the language to connect.");try{c.CalConnectionParams.$.offline="true",_.each(c.CalConnectionParams.ConnectionParam,function(n){var e=_.find(n.param,function(n){return"langCode"===n.$.name&&(n.$.value=u,!0)}),t=_.find(n.param,function(n){return"paramView"===n.$.name&&(n.$.value=i,!0)});e||n.param.push({$:{name:"langCode",value:u}}),t||n.param.push({$:{name:"paramView",value:i}})})}catch(e){return n.error("Connection XML in invalid format during playback localization."),void a(new Error("Invalid connection XML"))}try{var l=r.buildObject(c)}catch(e){n.error("Failed to write connection XML to string.",e),a(e)}a(void 0,l)})},this.startOfflineConnection=function(t,o,i){n.debug("Connecting offline with the CAL."),e.connect(t,o,function(e,t,o){return!e&&o&&o.isConnected()?(n.debug("Connected to CAL",t),void i(void 0,o)):(n.error("Failed to connect to CAL"),void i(new Error("Failed to connect")))})},this.connectOffline=function(n,e,o,i,a){async.waterfall([function(e){t.getUserAccessLevel(n,function(n,t){e(n,t)})},function(n,i){t.updateConnectionXml(e,o,n,function(n,e){i(n,e)})},function(n,e){t.startOfflineConnection(n,i,function(n,t){e(n,t)})}],function(n,e){a(n,e)})}};exports.OfflineConnectionUtils=offlineConnectionUtils;