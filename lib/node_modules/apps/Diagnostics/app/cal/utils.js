var _=require("underscore"),calWrapper=require("CAL"),xml2js=require("xml2js"),builder=require("xmlbuilder"),xmldom=require("xmldom"),pruneTree=function(e,t){var n=_.clone(t);n.dataPoints=_.filter(t.dataPoints,e);var r=_.map(t.categories,pruneTree.bind(void 0,e)),a=_.chain(r).pluck("moved").flatten().value();return n.categories=_.chain(r).pluck("tree").compact().value(),{tree:_.size(n.categories)+_.size(n.dataPoints)!==0?n:void 0,moved:a.concat(n.dataPoints)}},determineModelLinkingData=function(e){var t=function(e){return _.chain(e).map(function(e){return[e.getAttribute("name"),e.getAttribute("value")]}).object().value()};try{var n=(new xmldom.DOMParser).parseFromString(e),r=_.first(n.getElementsByTagName("userModelInfo")),a=r.getAttribute("isVehicle");if("true"===a)return null;var i=_.map(r.getElementsByTagName("model"),function(e){return{modelGUID:e.getAttribute("modelId"),decalModel:e.getAttribute("decal"),pin:e.getAttribute("pin")}}),o=r.getAttribute("defaultEngineModel"),c=_.filter(n.getElementsByTagName("controller"),function(e){return"ECU"===e.getAttribute("tla")}),u=_.chain(c).map(function(e){var n=t(e.getElementsByTagName("param")),r=n.engineModelNumber,a=n.engineSerialNumber;if(r&&a){var o=_.find(i,function(e){return a===e.pin||r.indexOf(e.decalModel)!=-1});return o?[a,o.modelGUID]:void 0}}).compact().object().value();return{detailIdToModelMap:u,defaultEngineModel:o}}catch(e){return null}},buildCategoryTree=function(e,t,n,r){var a={},i=[],o=function(t,n){if(a[n]||(a[n]={name:t.getName(),categories:[],dataPoints:[]},e[n]&&(a[n].dataPoints=e[n])),"Hidden"!==t.getName()){var r=t.getParent();r&&r.getType()===calWrapper.categoryType.special&&(r=r.getParent()),r?(o(r,r.getId()),a[r.getId()].categories=_.union(a[r.getId()].categories,[a[n]])):i=_.union(i,[a[n]])}},c=function(e){e.sort(function(e,t){return e.name>t.name?1:-1}),_.each(e,function(e){e.dataPoints.sort(),c(e.categories)})};_.each(t,function(e,t){o(e,t)});var u=n?_.find(i,function(e){return e.name===n.defaultEngineModel}):void 0;if(n&&u&&_.size(n.detailIdToModelMap)>1){var d=_.chain(n.detailIdToModelMap).values().uniq().without(n.defaultEngineModel).value(),l=_.map(d,function(e){var t=JSON.parse(JSON.stringify(u));return t.name=e,pruneTree(function(t){return r(e,t)},t)}),g=_.chain(l).pluck("moved").flatten().value(),s=pruneTree(function(e){return!_.contains(g,e)},u);i=_.chain(i).without(u).concat(_.pluck(l,"tree")).concat([s.tree]).compact().value()}return c(i),i},CategoryNodeWrapper=function(e){var t={};this.getId=function(){return e.getId()},this.getName=function(){return e.getName()},this.addChild=function(e){t[e.getId()]=e},this.getChildren=function(){return _.values(t)},this.getParent=function(t){var n=e.getParent();if(n)return t(n)},this.getType=function(){return e.getType()},this.isSpecial=function(){return e.getType()===calWrapper.categoryType.special},this.dataList=[]};CategoryNodeWrapper.prototype.toJSON=function(){var e=this.getChildren(),t=function(e){e.sort(function(e,t){return e.getName()>t.getName()?1:-1})};return this.dataList.sort(),t(e),this.isSpecial()?e:{name:this.getName(),categories:e,procedures:this.dataList}};var makeProceduresTree=function(e,t){var n={},r={},a=[],i=["tests","interactive","data_input"],o=function(e){return new CategoryNodeWrapper(e)},c=function(e){_.contains(i,e.getName())&&a.push(e)},u=function(e,t){r[e.getId()]=e,t&&(r[t.getId()]=t,n[t.getId()]=n[t.getId()]||[],n[t.getId()].push(e))},d=function(e){return e.isSpecial()&&!_.contains(i,e.getName())},l=function(e){var t=e.getParent(o);u(e,t),t&&t.isSpecial()?(c(t),l(t)):t&&l(t)};_.each(t,function(e){var t=o(e);l(t)});var g=function e(t){var n=t.getParent(o);return d(n)?e(n):n},s=function(e){var t=n[e.getId()],r=function(e){_.each(t,function(t){t.isSpecial()||e.addChild(t)})};if(e.isSpecial()){var a=g(e),i=m[e.getName()];i&&_.each(i.getChildren(),function(e){a.getId()===e.getId()&&r(e)})}else r(e)},m={};return _.each(a,function(e){var t=g(e);m[e.getName()]?m[e.getName()].addChild(t):(e.addChild(t),m[e.getName()]=e)}),_.each(r,function(t){s(t),e[t.getId()]&&(t.dataList=e[t.getId()])}),m},getConnectionLogBus=function(e,t){if(!e)return void t(new Error("Invalid connection xml"));var n=new xml2js.Parser;n.parseString(e,function(e,n){if(e)return void t(e);var r={},a=function(e){var t=_.pluck(e.param,"$"),n=_.findWhere(t,{name:"controllerId"});n=n&&n.value;var a=_.findWhere(t,{name:"logBus"});a=a&&a.value,n=n||"Unknown",a&&(r[n]=r[n]||[],r[n].push(a))};try{_.each(n.CalConnectionParams.ConnectionParam,a),t(null,r)}catch(e){t(new Error("Unable to find log bus in connection xml"))}})},getConnectionCallbackHandler=function(e){var t={};return{callAction:function(n,r){var a=t[n.getId()]||[];switch(a.push(r),t[n.getId()]=a,e){case"dataPoints":n.getDataPoints();break;case"procedures":n.getProcedures();break;case"recordings":n.getRecordings()}},getCallback:function(e){try{return t[e.getId()].shift()}catch(e){return}}}},getRecordingConnectionXml=function(e,t){var n=builder.create("CalConnectionParams",{encoding:"UTF-8",version:"1.0"}),r=n.e("ConnectionParam",{type:"recording",masterCategory:"category"});return r.e("param",{name:"langCode",value:t}),r.e("param",{name:"category",value:"category"}),r.e("param",{name:"filePath",value:e}),n.end()};exports.determineModelLinkingData=determineModelLinkingData,exports.buildCategoryTree=buildCategoryTree,exports.buildProceduresCategoryTree=makeProceduresTree,exports.getConnectionLogBus=getConnectionLogBus,exports.getConnectionCallbackHandler=getConnectionCallbackHandler,exports.getRecordingConnectionXml=getRecordingConnectionXml;