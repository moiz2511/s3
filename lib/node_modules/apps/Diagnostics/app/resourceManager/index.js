"use strict";var _=require("underscore"),Protocol=require("apps/ExclusiveResourceManager/node_modules/Protocol"),setup=function(e,r){var i={};e.on(Protocol.useResources,function(r,o){var s=r.resources,t=r.application;e.debug("Resource claim attempt for "+JSON.stringify(s)+" by "+JSON.stringify(t));var c=_.chain(s).map(function(e){return i[e]?[e,i[e]]:void 0}).compact().value();if(_.isEmpty(c))e.debug("Resource claim succeeded for "+JSON.stringify(s)),_.each(s,function(e){i[e]=t}),o({claimStatus:"ok"});else{var a=_.object(c);e.debug("Resource claim failed for "+JSON.stringify(s)+" by "+JSON.stringify(t)+", owning application is already "+JSON.stringify(a)),o({claimStatus:"deny",ownedApplications:a})}}),e.on(Protocol.releaseResources,function(r){var o=r.resources,s=r.application;e.debug("Resource release attempt for "+JSON.stringify(o)+" by "+JSON.stringify(s));var t=_.chain(o).map(function(r){return i[r]===s?(e.debug("Resource "+JSON.stringify(r)+" successfully released."),delete i[r],r):void e.warn("Resource release failed for "+JSON.stringify(r)+". Application "+JSON.stringify(s)+" is attempting to release the resource, but it is owned by "+JSON.stringify(i[r])+".")}).compact().value();_.isEmpty(t)||e.broadcast(Protocol.releasedResources,{resources:t})})};module.exports=setup;